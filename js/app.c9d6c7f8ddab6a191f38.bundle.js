(self.webpackChunk=self.webpackChunk||[]).push([[143],{138:(e,t,i)=>{const s=i(475),r=i(27),{lightningChart:o,AutoCursorModes:a,UIVisibilityModes:n,MarkerBuilders:d,UIBackgrounds:g,UIDirections:l,UIOrigins:u,UIElementBuilders:k,UIDraggingModes:h,Themes:b}=s,{createProgressiveTraceGenerator:c}=r,M="Markers",y=o().ChartXY({}).setTitle(M).setAutoCursorMode(a.disabled).setPadding({right:50}),C=y.addLineSeries();c().setNumberOfPoints(100).generate().toPromise().then((e=>{const t=(e[0].y+e[e.length-1].y)/2;C.add(e),y.addChartMarkerXY().setPosition({x:60,y:t}).setResultTableVisibility(n.always).setResultTable((e=>e.setContent([["ChartMarker"]]))).setGridStrokeXVisibility(n.whenDragged).setGridStrokeYVisibility(n.whenDragged).setTickMarkerXVisibility(n.whenDragged).setTickMarkerYVisibility(n.whenDragged)}));const P=d.XY.setPointMarker(g.Circle).setResultTableBackground(g.Pointer).addStyler((e=>e.setPointMarker((e=>e.setSize({x:5,y:5}))).setResultTable((e=>e.setOrigin(u.CenterBottom).setMargin({bottom:0}).setBackground((e=>e.setDirection(l.Down).setPointerAngle(80).setPointerLength(20))))).setGridStrokeXCut(!0).setAutoFitStrategy(void 0)));C.addMarker(P).setPosition({x:50,y:0}),C.setCursorResultTableFormatter(((e,t,i,s)=>e.addRow("SeriesMarker").addRow("X",i.toFixed(1)).addRow("Y",s.toFixed(1)))),y.addUIElement(k.ButtonBox).setPosition({x:99,y:99}).setOrigin(u.RightTop).setText("Download PNG Image").setPadding({top:5,right:20,bottom:5,left:20}).setButtonSize(0).setDraggingMode(h.notDraggable).onMouseClick((e=>{y.saveToFile(M+" - Screenshot")}))}},e=>{e.O(0,[736],(()=>(138,e(e.s=138)))),e.O()}]);