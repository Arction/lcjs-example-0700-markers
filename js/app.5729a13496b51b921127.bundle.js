(self.webpackChunk=self.webpackChunk||[]).push([[143],{138:(e,t,i)=>{const s=i(809),{lightningChart:r,AutoCursorModes:o,UIVisibilityModes:a,MarkerBuilders:n,UIBackgrounds:d,UIDirections:g,UIOrigins:l,UIElementBuilders:u,UIDraggingModes:k,Themes:h}=s,{createProgressiveTraceGenerator:b}=i(27),M=r().ChartXY({}).setTitle("Markers").setAutoCursorMode(o.disabled).setPadding({right:50}),c=M.addLineSeries();b().setNumberOfPoints(100).generate().toPromise().then((e=>{const t=(e[0].y+e[e.length-1].y)/2;c.add(e),M.addChartMarkerXY().setPosition({x:60,y:t}).setResultTableVisibility(a.always).setResultTable((e=>e.setContent([["ChartMarker"]]))).setGridStrokeXVisibility(a.whenDragged).setGridStrokeYVisibility(a.whenDragged).setTickMarkerXVisibility(a.whenDragged).setTickMarkerYVisibility(a.whenDragged)}));const y=n.XY.setPointMarker(d.Circle).setResultTableBackground(d.Pointer).addStyler((e=>e.setPointMarker((e=>e.setSize({x:5,y:5}))).setResultTable((e=>e.setOrigin(l.CenterBottom).setMargin({bottom:0}).setBackground((e=>e.setDirection(g.Down).setPointerAngle(80).setPointerLength(20))))).setGridStrokeXCut(!0).setAutoFitStrategy(void 0)));c.addMarker(y).setPosition({x:50,y:0}),c.setCursorResultTableFormatter(((e,t,i,s)=>e.addRow("SeriesMarker").addRow("X",i.toFixed(1)).addRow("Y",s.toFixed(1)))),M.addUIElement(u.ButtonBox).setPosition({x:99,y:99}).setOrigin(l.RightTop).setText("Download PNG Image").setPadding({top:5,right:20,bottom:5,left:20}).setButtonOffSize(0).setButtonOnSize(0).setDraggingMode(k.notDraggable).onMouseClick((e=>{M.saveToFile("Markers - Screenshot")}))}},e=>{e.O(0,[736],(()=>(138,e(e.s=138)))),e.O()}]);